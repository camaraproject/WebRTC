openapi: 3.0.0
info:
  title: Bring Your Own Number (BYON) Registration and Connectivity Management (RACM) Service APIs
  description: This API provide REST API for clients to manage Registration and Connectivity (RACM) towards MNO's IMS Network.
  version: 0.1.0
  contact:
    email: contact@domain.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: '{apiRoot}/racm/{apiVersion}'
    description: APIs to manage Client Registration and Connection
    variables:
      apiRoot:
        description: API Root
        default: http://localhost:9091
      apiVersion:
        description: The version of API to be used
        default: v1
tags:
  - name: Registration and Connection Management
    description: APIs for Client to Register into MNO's IMS Network
paths:
  /session:
    post:
      tags:
        - RACM
      summary: Create RACM Session
      description: Create RACM Session
      parameters:
        - $ref: '#/components/parameters/hdrTransactionId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RacmRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RacmResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              examples:
                400emergencyAdressMissing:
                  summary: Emergency address missing
                  value:
                    status: 400
                    code: EMERGENCY_ADDRESS_MISSING
                    message: Emergency address missing
                400genericResponse:
                  summary: Generic Response
                  value:
                    status: 400
                    code: INVALID_ARGUMENT
                    message: Schema validation failed at  ...
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
              examples:
                403maxRegistrationUser:
                  summary: Max registration per user
                  value:
                    status: 403
                    code: MAX_REGISTRATION_PER_USER
                    message: 'The maximum number of service registrations per user has been reached'
                403maxRegistrationMSISDN:
                  summary: Max registration per MSISDN
                  value:
                    status: 403
                    code: MAX_REGISTRATION_PER_MSISDN
                    message: 'The maximum number of service registrations per MSISDN has been reached'
                403maxDevicesUser:
                  summary: Max devices per user
                  value:
                    status: 403
                    code: MAX_DEVICES_PER_USER
                    message: 'The maximum number of device instances per user has been reached'
                403genericResponse:
                  summary: Generic Response
                  value:
                    status: 403
                    code: PERMISSION_DENIED
                    message: 'Operation not allowed: ...' 
      security:
        - BearerAuth:
            - read
            - write
  /session/{sessionId}:
    put:
      tags:
        - RACM
      summary: For sharing new AccessToken with WebRTC GW, the AccessToken is expected to be received from the Auth server.
      description: '**The client shall use the resourceUrl supplied in the session creation request. There is no need of constructing the URL**'
      parameters:
        - $ref: '#/components/parameters/hdrTransactionId'
        - $ref: '#/components/parameters/hdrClientId'
        - $ref: '#/components/parameters/pathParamSessionId'
      responses:
        '200':
          description: No Content
      security:
        - BearerAuth:
            - read
            - write
    delete:
      tags:
        - RACM
      summary: Delete Registration Session.
      description: '**The client shall use the resourceUrl supplied in the session creation request. There is no need of constructing the URL**'
      parameters:
        - $ref: '#/components/parameters/hdrTransactionId'
        - $ref: '#/components/parameters/hdrClientId'
        - $ref: '#/components/parameters/pathParamSessionId'
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/NotFound404'
      security:
        - BearerAuth:
            - read
            - write
components:
  schemas:
    RacmRequest:
      type: object
      properties:
        deviceId:
          type: string
          description: The device-id of the client in UUID format.
        notificationUri:
          type: string
          description: The URI which need to be used by WebRTC Gateway for posting notifications towards the client. This should be filled only when the notification channel is provided by a independent notification channel provider.
    RacmResponse:
      type: object
      properties:
        connectionInformation:
          $ref: '#/components/schemas/ConnectionInformation'
        regInfo:
          type: array
          items:
            $ref: '#/components/schemas/RegistrationInformation'
        resourceURL:
          type: string
          description: The resource URL allocated by WebRTC GW representing the RACM session created. The sessionId assigned for RACM session is part of the url.
    ConnectionInformation:
      type: object
      properties:
        clientId:
          type: string
          description: The unique id assigned by WebRTC GW for identifying the association of device with WebRTC GW. The clients are required to include this value in clientId header.
    RegistrationStatus:
      type: string
      enum:
        - Registered
    RegistrationInformation:
      type: object
      properties:
        msisdn:
          type: string
        regStatus:
          $ref: '#/components/schemas/RegistrationStatus'
    ErrorInfo:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code returned along with this error response
        code:
          type: string
          description: Code given to this error
        message:
          type: string
          description: Detailed error description
      required:
        - status
        - code
        - message
  parameters:
    hdrClientId:
      name: clientId
      in: header
      description: The Client ID assigned by WebRTC GW
      required: true
      style: simple
      explode: false
      schema:
        type: string
    hdrTransactionId:
      name: transactionId
      in: header
      description: The Transaction ID associated with the request
      required: true
      style: simple
      explode: false
      schema:
        type: string
    pathParamSessionId:
      name: sessionId
      in: path
      description: The sessionId assigned by the RACM service
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  responses:
    Generic400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 400
            code: INVALID_ARGUMENT
            message: Schema validation failed at  ...
    Generic401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 401
            code: UNAUTHENTICATED
            message: 'Authorization failed: ...'
    Generic403:
      description: Device not authorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 403
            code: PERMISSION_DENIED
            message: 'Operation not allowed: ...'
    NotFound404:
      description: Session Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 404
            code: NOT_FOUND
            message: Unable to find the session with the provided Id parameters
    Generic500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 500
            code: INTERNAL
            message: 'Internal server error: ...'
    Generic501:
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 501
            code: NOT_IMPLEMENTED
            message: Service not implemented for the specified user device
    Generic503:
      description: Service unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorInfo'
          example:
            status: 503
            code: UNAVAILABLE
            message: Service unavailable
